---
import SunIcon from '../assets/icons/sun.svg';
import MoonIcon from '../assets/icons/moon.svg';
---

<button id="theme-switcher" class="theme-switcher" aria-label="Toggle theme" title="Toggle theme">
  <SunIcon class="sun-icon" />
  <MoonIcon class="moon-icon" />
</button>

<style>
  .theme-switcher {
    background: none;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    color: var(--text-color);
    transition: var(--theme-transition);
    position: relative;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .theme-switcher:hover {
    color: var(--accent-color);
  }

  .sun-icon,
  .moon-icon {
    position: absolute;
    width: 24px;
    height: 24px;
    transition: all 0.5s ease;
  }

  html:not([data-theme='dark']) .sun-icon {
    opacity: 0;
    transform: rotate(90deg) scale(0);
  }

  html:not([data-theme='dark']) .moon-icon {
    opacity: 1;
    transform: rotate(0deg) scale(1);
  }

  html[data-theme='dark'] .sun-icon {
    opacity: 1;
    transform: rotate(0deg) scale(1);
  }

  html[data-theme='dark'] .moon-icon {
    opacity: 0;
    transform: rotate(-90deg) scale(0);
  }
</style>

<script>
  let currentTheme = (() => {
    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
      return localStorage.getItem('theme') as string;
    }
    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
      return 'dark';
    }
    return 'light';
  })();

  const applyTheme = (theme: string) => {
    if (theme === 'light') {
      document.documentElement.removeAttribute('data-theme');
    } else {
      document.documentElement.setAttribute('data-theme', 'dark');
    }
    localStorage.setItem('theme', theme);
  };

  const handleToggleClick = () => {
    currentTheme = currentTheme === 'light' ? 'dark' : 'light';
    applyTheme(currentTheme);
  };

  document.getElementById('theme-switcher')?.addEventListener('click', handleToggleClick);
</script>
